// Testa a primalidade dos números

int Primalidade (unsigned int x)
{
	unsigned int d;
	if(x < 4)
	{
		if(x < 2)
			return 0;
		else
			return 1;

	}
	
	if((x&1) == 0) ; Coloca uma máscada AND para testar (bit a bit) se o primeiro bit é 0 ou 1 (nro ímpar ou par)
		return 0;


	d = x/2;
	while (d > 2)
	{
		if((x%d) == 0)
			return 0;
		d--;

	}

	return 1;	

}

; ================================================ XX ================================================ ;

Primalidade:	push R4; d
		cmp #2, R15
		jge Teste_par


Prim_zero:	pop R4
		clr R15
		ret


Test_par:	mov R15, R14
		and #1, R14
		cmp #0, R14
		jeq Prim_zero   ;jump-if-equal


Teste_impar:	mov R15, R4
		rra R4 ; d = x/2 => Desloca para a direita


Prim_while:	cmp #2, R4
		j | Prim_end
		push R15
		mov R4, R14
		call Resto_uns
		mov R15, R14
		pop R15
		cmp #0, R14
		jeq Prim_zero
		dec R4
		jmp Prim_while
		
		
Prim_end:	pop R4
		mov #1, R15
		ret				